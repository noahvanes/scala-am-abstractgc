* About Scala-AM

The goal of the Scala-AM framework is to experiment with abstract machines and language semantics.
Scala-AM is initially based on the theoretical framework of Abstracting Abstract Machines (Van Horn & Might, 2010).
For more information on the framework, consult the following publications:
  - Scala-AM: A Modular Static Analysis Framework, SCAM 2016, [[http://soft.vub.ac.be/Publications/2016/vub-soft-tr-16-07.pdf][pdf]], [[https://zenodo.org/badge/latestdoi/23603/acieroid/scala-am][doi]].
  - Building a Modular Static Analysis Framework in Scala, [[http://soft.vub.ac.be/Publications/2016/vub-soft-tr-16-13.pdf][pdf]].

* Abstract Reference Counting

This fork extends Scala-AM with a proof-of-concept implementation of abstract reference counting.
Currently, this implementation is provided as a separate machine abstraction in =src/main/scala/machine/AAMRefCounting.scala=
(note that at this point, this machine only supports a limited subset of Scheme, as the AST needs to be preprocessed to compute free variables and inline primitives).

* Benchmarks

The benchmarks found in our ECOOP'19 submission can be run by launching =src/main/scala/machine/Main.scala= using sbt.